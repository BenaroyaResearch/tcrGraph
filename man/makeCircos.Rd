% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcrGraphFigures.R
\name{makeCircos}
\alias{makeCircos}
\title{Generates a circos-style plot}
\usage{
makeCircos(
  tcrGraph,
  title = "",
  annoFields = c("project", "chainType"),
  annoPalettes = NULL,
  sortField = "project",
  sortMixed = FALSE,
  sampleField = "libid",
  chainField = "id",
  arcColorField = sortField,
  showLegend = TRUE,
  trackHeight = 0.1
)
}
\arguments{
\item{tcrGraph}{the tcrGraph object to generate a plot from}

\item{title}{a string that will be displayed as the title of the plot}

\item{annoFields}{a string or vector of strings indicating the names of fields in the tcrGraph data 
that will be used to generate annotation tracks in the circos plot}

\item{annoPalettes}{a named list of color palettes, where names correspond to the values in \code{annoFields} (see examples).
If a given annotation field doesn't have a palette specified, a random palette will be assigned.}

\item{sortField}{a string indicating the field in \code{annoFields} to sort the sections in the circos plot by}

\item{sortMixed}{a logical indicating whether the sortField should be sorted by numerical as well as alphabetical characters}

\item{sampleField}{a string indicating the field used to represent individual samples/cells in the tcrGraph object. 
For BRI data from the Research Database this should almost always be "libid"}

\item{chainField}{a string indicating the field used to represent a node in the tcrGraph object. For data prepared by}

\item{arcColorField}{a string indicating which of the fields in \code{tcrGraph} to use to color the arcs connecting sections
of the plot. Note that the "from" node sets the color of the arc.}

\item{showLegend}{a logical indicating whether to render the legend given the \code{annoFields}
\code{makeTcrGraph()} this should be left as the default "id".}

\item{trackHeight}{a number representing the fraction of a unit circle that should be taken up by each track 
(eg: '0.1' means each track takes up 1/10 of the full circle radius)
#' @return a plot object}
}
\description{
Generates a circos-style plot with reasonable default aesthetics.
}
\examples{
\dontrun{
# self-contained example with user-defined palettes
tcrData <- data.frame(
   libid = c("lib000", "lib000", "lib001", "lib001"), 
   v_gene = c("TRAV1-1", "TRBV1", "TRAV1-1", "TRBV2"), 
   j_gene = c("TRAJ11", "TRBJ1-1", "TRAJ11", "TRBJ2-2"),
   project = c("P0-1", "P0-1", "P0-2", "P0-2"),
   fake_nt_sequence = c("CAT", "GAT", "CAT", "GAC")
)
myGraph <- makeTcrGraph(tcrData, link = "fake_nt_sequence")
makeCircos(
  myGraph,
  annoPalettes = list(
    # unnamed vectors of colors with the right length are allowed
    project = c("blue", "green"), 
    # named vectors of colors are also allowed
    chainType = c(TRB = "red", TRA = "purple")
  )
)

# We can also directly visualize the circos plot for clones data
makeCircos(getClonesFromTcrGraph(myGraph, format = "tcrGraph"))
}
}
\author{
Mario G Rosasco, \email{mrosasco@benaroyaresearch.org}
}
